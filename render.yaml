services:
  # ✅ SERVIÇO WEB (GUNICORN)
  - type: web
    name: web-recorte-digital-prod
    env: docker
    dockerfilePath: ./Dockerfile
    plan: free
    # ✅ Adiciona a porta 10000 para clareza e consistência
    ports:
      - 10000
    startCommand: gunicorn main:app --bind 0.0.0.0:$PORT --timeout 60 --workers 2 --preload
    envVars:
      # ✅ Usa o nome padrão do Celery para o broker
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-broker-recorte-digital-prod
          property: connectionString
      # ✅ Adiciona a porta como variável de ambiente (boa prática)
      - key: PORT
        value: "10000"

  # ✅ SERVIÇO WORKER (CELERY)
  - type: worker
    name: worker-recorte-digital-prod
    env: docker
    dockerfilePath: ./Dockerfile
    plan: free
    startCommand: celery -A app.celery_worker.celery worker --loglevel=info --concurrency=1 --queues=default
    envVars:
      # ✅ Usa o nome padrão do Celery para o broker
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-broker-recorte-digital-prod
          property: connectionString

  # ✅ SERVIÇO BEAT (CELERY BEAT)
  - type: worker
    name: beat-recorte-digital-prod
    env: docker
    dockerfilePath: ./Dockerfile
    plan: free
    startCommand: celery -A app.celery_worker.celery beat --loglevel=info
    envVars:
      - key: IS_BEAT
        value: "true"
      # ✅ Usa o nome padrão do Celery para o broker
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-broker-recorte-digital-prod
          property: connectionString
