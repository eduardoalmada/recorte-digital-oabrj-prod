services:
  # ✅ SERVIÇO WEB (GUNICORN)
  - type: web
    name: web-recorte-digital-prod
    env: docker
    dockerfilePath: ./Dockerfile
    plan: free
    ports:
      - 10000
    startCommand: gunicorn main:app --bind 0.0.0.0:$PORT --timeout 120 --workers 2 --preload
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-broker-recorte-digital-prod
          property: connectionString
      - key: PORT
        value: "10000"

  # ✅ SERVIÇO WORKER (OTIMIZADO PARA SCRAPING)
  - type: worker
    name: worker-recorte-digital-prod
    env: docker
    dockerfilePath: ./Dockerfile
    plan: free
    startCommand: |
      celery -A celery_worker.celery_app worker \
        --loglevel=info \
        --concurrency=1 \
        --max-tasks-per-child=20 \
        --without-gossip \
        --without-mingle \
        --without-heartbeat \
        --queues=default
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-broker-recorte-digital-prod
          property: connectionString

  # ✅ SERVIÇO BEAT (OTIMIZADO)
  - type: worker
    name: beat-recorte-digital-prod
    env: docker
    dockerfilePath: ./Dockerfile
    plan: free
    startCommand: |
      rm -f /tmp/celerybeat-prod-schedule /tmp/celerybeat-prod.pid
      IS_BEAT=true celery -A celery_worker.celery_app beat \
        --loglevel=info \
        --pidfile=/tmp/celerybeat-prod.pid \
        --schedule=/tmp/celerybeat-prod-schedule
    envVars:
      - key: IS_BEAT
        value: "true"
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: redis-broker-recorte-digital-prod
          property: connectionString

  # ✅ SERVIÇO REDIS (ESSENTIALS 256MB)
  - type: redis
    name: redis-broker-recorte-digital-prod
    plan: essentials-256mb  # ✅ PLANO CORRETO
    ipAllowList: []
    maxmemoryPolicy: noeviction
